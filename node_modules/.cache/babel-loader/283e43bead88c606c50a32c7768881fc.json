{"ast":null,"code":"import _objectSpread from \"/Users/aban.domingo/Desktop/CPSC431/431-Final/abandomingo.github.io/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"/Users/aban.domingo/Desktop/CPSC431/431-Final/abandomingo.github.io/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _get from \"/Users/aban.domingo/Desktop/CPSC431/431-Final/abandomingo.github.io/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/get\";\nimport _getPrototypeOf from \"/Users/aban.domingo/Desktop/CPSC431/431-Final/abandomingo.github.io/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/aban.domingo/Desktop/CPSC431/431-Final/abandomingo.github.io/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/Users/aban.domingo/Desktop/CPSC431/431-Final/abandomingo.github.io/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nimport _classCallCheck from \"/Users/aban.domingo/Desktop/CPSC431/431-Final/abandomingo.github.io/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/aban.domingo/Desktop/CPSC431/431-Final/abandomingo.github.io/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport { defineHidden, is, createInterpolator, eachProp, hasFluidValue, getFluidValue, each, isAnimatedString, useForceUpdate, useLayoutEffect, addFluidObserver, removeFluidObserver, raf, useOnce } from '@react-spring/shared';\nimport { forwardRef, useRef, useCallback, useEffect, createElement } from 'react';\nvar $node = Symbol.for(\"Animated:node\");\nvar isAnimated = function isAnimated(value) {\n  return !!value && value[$node] === value;\n};\nvar getAnimated = function getAnimated(owner) {\n  return owner && owner[$node];\n};\nvar setAnimated = function setAnimated(owner, node) {\n  return defineHidden(owner, $node, node);\n};\nvar getPayload = function getPayload(owner) {\n  return owner && owner[$node] && owner[$node].getPayload();\n};\nvar Animated = /*#__PURE__*/function () {\n  function Animated() {\n    _classCallCheck(this, Animated);\n    setAnimated(this, this);\n  }\n  _createClass(Animated, [{\n    key: \"getPayload\",\n    value: function getPayload() {\n      return this.payload || [];\n    }\n  }]);\n  return Animated;\n}();\nvar AnimatedValue = /*#__PURE__*/function (_Animated) {\n  _inherits(AnimatedValue, _Animated);\n  var _super = _createSuper(AnimatedValue);\n  function AnimatedValue(_value) {\n    var _this;\n    _classCallCheck(this, AnimatedValue);\n    _this = _super.call(this);\n    _this._value = _value;\n    _this.done = true;\n    _this.durationProgress = 0;\n    if (is.num(_this._value)) {\n      _this.lastPosition = _this._value;\n    }\n    return _this;\n  }\n  _createClass(AnimatedValue, [{\n    key: \"getPayload\",\n    value: function getPayload() {\n      return [this];\n    }\n  }, {\n    key: \"getValue\",\n    value: function getValue() {\n      return this._value;\n    }\n  }, {\n    key: \"setValue\",\n    value: function setValue(value, step) {\n      if (is.num(value)) {\n        this.lastPosition = value;\n        if (step) {\n          value = Math.round(value / step) * step;\n          if (this.done) {\n            this.lastPosition = value;\n          }\n        }\n      }\n      if (this._value === value) {\n        return false;\n      }\n      this._value = value;\n      return true;\n    }\n  }, {\n    key: \"reset\",\n    value: function reset() {\n      var done = this.done;\n      this.done = false;\n      if (is.num(this._value)) {\n        this.elapsedTime = 0;\n        this.durationProgress = 0;\n        this.lastPosition = this._value;\n        if (done) this.lastVelocity = null;\n        this.v0 = null;\n      }\n    }\n  }], [{\n    key: \"create\",\n    value: function create(value) {\n      return new AnimatedValue(value);\n    }\n  }]);\n  return AnimatedValue;\n}(Animated);\nvar AnimatedString = /*#__PURE__*/function (_AnimatedValue) {\n  _inherits(AnimatedString, _AnimatedValue);\n  var _super2 = _createSuper(AnimatedString);\n  function AnimatedString(value) {\n    var _this2;\n    _classCallCheck(this, AnimatedString);\n    _this2 = _super2.call(this, 0);\n    _this2._string = null;\n    _this2._toString = createInterpolator({\n      output: [value, value]\n    });\n    return _this2;\n  }\n  _createClass(AnimatedString, [{\n    key: \"getValue\",\n    value: function getValue() {\n      var value = this._string;\n      return value == null ? this._string = this._toString(this._value) : value;\n    }\n  }, {\n    key: \"setValue\",\n    value: function setValue(value) {\n      if (is.str(value)) {\n        if (value == this._string) {\n          return false;\n        }\n        this._string = value;\n        this._value = 1;\n      } else if (_get(_getPrototypeOf(AnimatedString.prototype), \"setValue\", this).call(this, value)) {\n        this._string = null;\n      } else {\n        return false;\n      }\n      return true;\n    }\n  }, {\n    key: \"reset\",\n    value: function reset(goal) {\n      if (goal) {\n        this._toString = createInterpolator({\n          output: [this.getValue(), goal]\n        });\n      }\n      this._value = 0;\n      _get(_getPrototypeOf(AnimatedString.prototype), \"reset\", this).call(this);\n    }\n  }], [{\n    key: \"create\",\n    value: function create(value) {\n      return new AnimatedString(value);\n    }\n  }]);\n  return AnimatedString;\n}(AnimatedValue);\nvar TreeContext = {\n  dependencies: null\n};\nvar AnimatedObject = /*#__PURE__*/function (_Animated2) {\n  _inherits(AnimatedObject, _Animated2);\n  var _super3 = _createSuper(AnimatedObject);\n  function AnimatedObject(source) {\n    var _this3;\n    _classCallCheck(this, AnimatedObject);\n    _this3 = _super3.call(this);\n    _this3.source = source;\n    _this3.setValue(source);\n    return _this3;\n  }\n  _createClass(AnimatedObject, [{\n    key: \"getValue\",\n    value: function getValue(animated) {\n      var values = {};\n      eachProp(this.source, function (source, key) {\n        if (isAnimated(source)) {\n          values[key] = source.getValue(animated);\n        } else if (hasFluidValue(source)) {\n          values[key] = getFluidValue(source);\n        } else if (!animated) {\n          values[key] = source;\n        }\n      });\n      return values;\n    }\n  }, {\n    key: \"setValue\",\n    value: function setValue(source) {\n      this.source = source;\n      this.payload = this._makePayload(source);\n    }\n  }, {\n    key: \"reset\",\n    value: function reset() {\n      if (this.payload) {\n        each(this.payload, function (node) {\n          return node.reset();\n        });\n      }\n    }\n  }, {\n    key: \"_makePayload\",\n    value: function _makePayload(source) {\n      if (source) {\n        var payload = new Set();\n        eachProp(source, this._addToPayload, payload);\n        return Array.from(payload);\n      }\n    }\n  }, {\n    key: \"_addToPayload\",\n    value: function _addToPayload(source) {\n      var _this4 = this;\n      if (TreeContext.dependencies && hasFluidValue(source)) {\n        TreeContext.dependencies.add(source);\n      }\n      var payload = getPayload(source);\n      if (payload) {\n        each(payload, function (node) {\n          return _this4.add(node);\n        });\n      }\n    }\n  }]);\n  return AnimatedObject;\n}(Animated);\nvar AnimatedArray = /*#__PURE__*/function (_AnimatedObject) {\n  _inherits(AnimatedArray, _AnimatedObject);\n  var _super4 = _createSuper(AnimatedArray);\n  function AnimatedArray(source) {\n    _classCallCheck(this, AnimatedArray);\n    return _super4.call(this, source);\n  }\n  _createClass(AnimatedArray, [{\n    key: \"getValue\",\n    value: function getValue() {\n      return this.source.map(function (node) {\n        return node.getValue();\n      });\n    }\n  }, {\n    key: \"setValue\",\n    value: function setValue(source) {\n      var payload = this.getPayload();\n      if (source.length == payload.length) {\n        return payload.some(function (node, i) {\n          return node.setValue(source[i]);\n        });\n      }\n      _get(_getPrototypeOf(AnimatedArray.prototype), \"setValue\", this).call(this, source.map(makeAnimated));\n      return true;\n    }\n  }], [{\n    key: \"create\",\n    value: function create(source) {\n      return new AnimatedArray(source);\n    }\n  }]);\n  return AnimatedArray;\n}(AnimatedObject);\nfunction makeAnimated(value) {\n  var nodeType = isAnimatedString(value) ? AnimatedString : AnimatedValue;\n  return nodeType.create(value);\n}\nfunction getAnimatedType(value) {\n  var parentNode = getAnimated(value);\n  return parentNode ? parentNode.constructor : is.arr(value) ? AnimatedArray : isAnimatedString(value) ? AnimatedString : AnimatedValue;\n}\nvar withAnimated = function withAnimated(Component, host) {\n  var hasInstance = !is.fun(Component) || Component.prototype && Component.prototype.isReactComponent;\n  return forwardRef(function (givenProps, givenRef) {\n    var instanceRef = useRef(null);\n    var ref = hasInstance && useCallback(function (value) {\n      instanceRef.current = updateRef(givenRef, value);\n    }, [givenRef]);\n    var _getAnimatedState = getAnimatedState(givenProps, host),\n      _getAnimatedState2 = _slicedToArray(_getAnimatedState, 2),\n      props = _getAnimatedState2[0],\n      deps = _getAnimatedState2[1];\n    var forceUpdate = useForceUpdate();\n    var callback = function callback() {\n      var instance = instanceRef.current;\n      if (hasInstance && !instance) {\n        return;\n      }\n      var didUpdate = instance ? host.applyAnimatedValues(instance, props.getValue(true)) : false;\n      if (didUpdate === false) {\n        forceUpdate();\n      }\n    };\n    var observer = new PropsObserver(callback, deps);\n    var observerRef = useRef();\n    useLayoutEffect(function () {\n      var lastObserver = observerRef.current;\n      observerRef.current = observer;\n      each(deps, function (dep) {\n        return addFluidObserver(dep, observer);\n      });\n      if (lastObserver) {\n        each(lastObserver.deps, function (dep) {\n          return removeFluidObserver(dep, lastObserver);\n        });\n        raf.cancel(lastObserver.update);\n      }\n    });\n    useEffect(callback, []);\n    useOnce(function () {\n      return function () {\n        var observer2 = observerRef.current;\n        each(observer2.deps, function (dep) {\n          return removeFluidObserver(dep, observer2);\n        });\n      };\n    });\n    var usedProps = host.getComponentProps(props.getValue());\n    return /* @__PURE__ */createElement(Component, _objectSpread(_objectSpread({}, usedProps), {}, {\n      ref: ref\n    }));\n  });\n};\nvar PropsObserver = /*#__PURE__*/function () {\n  function PropsObserver(update, deps) {\n    _classCallCheck(this, PropsObserver);\n    this.update = update;\n    this.deps = deps;\n  }\n  _createClass(PropsObserver, [{\n    key: \"eventObserved\",\n    value: function eventObserved(event) {\n      if (event.type == \"change\") {\n        raf.write(this.update);\n      }\n    }\n  }]);\n  return PropsObserver;\n}();\nfunction getAnimatedState(props, host) {\n  var dependencies = new Set();\n  TreeContext.dependencies = dependencies;\n  if (props.style) props = _objectSpread(_objectSpread({}, props), {}, {\n    style: host.createAnimatedStyle(props.style)\n  });\n  props = new AnimatedObject(props);\n  TreeContext.dependencies = null;\n  return [props, dependencies];\n}\nfunction updateRef(ref, value) {\n  if (ref) {\n    if (is.fun(ref)) ref(value);else ref.current = value;\n  }\n  return value;\n}\nvar cacheKey = Symbol.for(\"AnimatedComponent\");\nvar createHost = function createHost(components) {\n  var _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n    _ref$applyAnimatedVal = _ref.applyAnimatedValues,\n    applyAnimatedValues = _ref$applyAnimatedVal === void 0 ? function () {\n      return false;\n    } : _ref$applyAnimatedVal,\n    _ref$createAnimatedSt = _ref.createAnimatedStyle,\n    createAnimatedStyle = _ref$createAnimatedSt === void 0 ? function (style) {\n      return new AnimatedObject(style);\n    } : _ref$createAnimatedSt,\n    _ref$getComponentProp = _ref.getComponentProps,\n    getComponentProps = _ref$getComponentProp === void 0 ? function (props) {\n      return props;\n    } : _ref$getComponentProp;\n  var hostConfig = {\n    applyAnimatedValues: applyAnimatedValues,\n    createAnimatedStyle: createAnimatedStyle,\n    getComponentProps: getComponentProps\n  };\n  var animated = function animated(Component) {\n    var displayName = getDisplayName(Component) || \"Anonymous\";\n    if (is.str(Component)) {\n      Component = animated[Component] || (animated[Component] = withAnimated(Component, hostConfig));\n    } else {\n      Component = Component[cacheKey] || (Component[cacheKey] = withAnimated(Component, hostConfig));\n    }\n    Component.displayName = \"Animated(\".concat(displayName, \")\");\n    return Component;\n  };\n  eachProp(components, function (Component, key) {\n    if (is.arr(components)) {\n      key = getDisplayName(Component);\n    }\n    animated[key] = animated(Component);\n  });\n  return {\n    animated: animated\n  };\n};\nvar getDisplayName = function getDisplayName(arg) {\n  return is.str(arg) ? arg : arg && is.str(arg.displayName) ? arg.displayName : is.fun(arg) && arg.name || null;\n};\nexport { Animated, AnimatedArray, AnimatedObject, AnimatedString, AnimatedValue, createHost, getAnimated, getAnimatedType, getPayload, isAnimated, setAnimated };","map":{"version":3,"mappings":";;;;;;;;;;AAGA,IAAMA,QAAaC,OAAOC,IAAI;iBAEJ;EAAA,OACxB,CAAC,CAACC,SAASA,MAAMH,WAAWG;AAAA;kBAGH;EAAA,OACzBC,SAASA,MAAMJ;AAAA;kBAGU;EAAA,OACzBK,aAAaD,OAAOJ,OAAOM;AAAA;iBAGH;EAAA,OACxBF,SAASA,MAAMJ,UAAUI,MAAMJ,OAAOO;AAAA;AAAA;EAMtC;IAAA;IAEEC,YAAY,MAAM;EAAA;EAAA;IAAA;IAAA,OAapB;MACE,OAAO,KAAKC,WAAW;IAAA;EAAA;EAAA;AAAA;AAAA;;;EC5BzB,uBAAsBC;IAAA;IAAA;IACpB;IADoB;IAPtB,aAAO;IAKP,yBAAmB;IAIjB,IAAIC,GAAGC,IAAI,MAAKF;MACd,MAAKG,eAAe,MAAKH;IAAA;IAAA;EAAA;EAAA;IAAA;IAAA,OAS7B;MACE,OAAO,CAAC;IAAA;EAAA;IAAA;IAAA,OAGV;MACE,OAAO,KAAKA;IAAA;EAAA;IAAA;IAAA,OAGd;MACE,IAAIC,GAAGC,IAAIT;QACT,KAAKU,eAAeV;QACpB,IAAIW;UACFX,QAASY,KAAKC,MAAMb,QAAQW,QAAQA;UACpC,IAAI,KAAKG;YACP,KAAKJ,eAAeV;UAAA;QAAA;MAAA;MAI1B,IAAI,KAAKO,WAAWP;QAClB,OAAO;MAAA;MAET,KAAKO,SAASP;MACd,OAAO;IAAA;EAAA;IAAA;IAAA,OAGT;MACE,IAAQc,OAAS,KAATA;MACR,KAAKA,OAAO;MACZ,IAAIN,GAAGC,IAAI,KAAKF;QACd,KAAKQ,cAAc;QACnB,KAAKC,mBAAmB;QACxB,KAAKN,eAAe,KAAKH;QACzB,IAAIO,MAAM,KAAKG,eAAe;QAC9B,KAAKC,KAAK;MAAA;IAAA;EAAA;IAAA;IAAA,OA1Ce,gBAKtBlB;MACL,OAAO,IAAImB,cAAcnB;IAAA;EAAA;EAAA;AAAA,EAjBeoB;AAAAA;;;ECM1C,wBAAYpB;IAAA;IAAA;IACV,4BAAM;IAJE,iBAAyB;IAKjC,OAAKqB,YAAYC,mBAAmB;MAClCC,QAAQ,CAACvB,OAAOA;IAAA;IAAA;EAAA;EAAA;IAAA;IAAA,OASpB;MACE,YAAY,KAAKwB;MACjB,OAAOxB,SAAS,OAAQ,KAAKwB,UAAU,KAAKH,UAAU,KAAKd,UAAWP;IAAA;EAAA;IAAA;IAAA,OAGxE;MACE,IAAIQ,GAAGiB,IAAIzB;QACT,IAAIA,SAAS,KAAKwB;UAChB,OAAO;QAAA;QAET,KAAKA,UAAUxB;QACf,KAAKO,SAAS;MAAA,wFACUP;QACxB,KAAKwB,UAAU;MAAA;QAEf,OAAO;MAAA;MAET,OAAO;IAAA;EAAA;IAAA;IAAA,OAGT;MACE,IAAIE;QACF,KAAKL,YAAYC,mBAAmB;UAClCC,QAAQ,CAAC,KAAKI,YAAYD;QAAA;MAAA;MAG9B,KAAKnB,SAAS;MACd;IAAM;EAAA;IAAA;IAAA,OApCY,gBAKbP;MACL,OAAO,IAAI4B,eAAe5B;IAAA;EAAA;EAAA;AAAA,EAdM6B;ICKvBC,cAA2B;EAAEC,cAAc;AAAA;AAAA;;;ECGtD,wBAAsBC;IAAA;IAAA;IACpB;IADoB;IAEpB,OAAKC,SAASD;IAAA;EAAA;EAAA;IAAA;IAAA,OAGhB;MACE,aAAuB;MACvBE,SAAS,KAAKF,QAAQ;QACpB,IAAIG,WAAWH;UACbI,OAAOC,OAAOL,OAAOL,SAASW;QAAA,WACrBC,cAAcP;UACvBI,OAAOC,OAAOG,cAAcR;QAAA,WACnB,CAACM;UACVF,OAAOC,OAAOL;QAAA;MAAA;MAGlB,OAAOI;IAAA;EAAA;IAAA;IAAA,OAIT;MACE,KAAKJ,SAASA;MACd,KAAK1B,UAAU,KAAKmC,aAAaT;IAAA;EAAA;IAAA;IAAA,OAGnC;MACE,IAAI,KAAK1B;QACPoC,KAAK,KAAKpC,SAAS;UAAA,OAAQH,KAAKwC;QAAA;MAAA;IAAA;EAAA;IAAA;IAAA,OAK1B;MACR,IAAIX;QACF,cAAgB,IAAIY;QACpBV,SAASF,QAAQ,KAAKa,eAAevC;QACrC,OAAOwC,MAAMC,KAAKzC;MAAA;IAAA;EAAA;IAAA;IAAA,OAKZ;MAAA;MACR,IAAIwB,YAAYC,gBAAgBQ,cAAcP;QAC5CF,YAAYC,aAAaiB,IAAIhB;MAAA;MAE/B,cAAgB5B,WAAW4B;MAC3B,IAAI1B;QACFoC,KAAKpC,SAAS;UAAA,OAAQ,OAAK0C,IAAI7C;QAAA;MAAA;IAAA;EAAA;EAAA;AAAA,EAhDDiB;AAAAA;;;ECClC,uBAAYY;IAAA;IAAA,0BACJA;EAAA;EAAA;IAAA;IAAA,OAQR;MACE,OAAO,KAAKA,OAAOiB,IAAI;QAAA,OAAQ9C,KAAKwB;MAAA;IAAA;EAAA;IAAA;IAAA,OAGtC;MACE,cAAgB,KAAKvB;MAErB,IAAI4B,OAAOkB,UAAU5C,QAAQ4C;QAC3B,OAAO5C,QAAQ6C,KAAK;UAAA,OAAahD,KAAK8B,SAASD,OAAOoB;QAAA;MAAA;MAGxD,4EAAepB,OAAOiB,IAAII;MAC1B,OAAO;IAAA;EAAA;IAAA;IAAA,OApBD,gBAIDrB;MACL,OAAO,IAAIsB,cAActB;IAAA;EAAA;EAAA;AAAA,EARnBuB;AA2BV;EACE,eAAiBC,iBAAiBxD,SAASyD,iBAAiB5B;EAC5D,OAAO6B,SAASC,OAAO3D;AAAA;yBChCOA;EAC9B,iBAAmB4D,YAAY5D;EAC/B,OAAO6D,aACFA,WAAWC,cACZtD,GAAGuD,IAAI/D,SACPgE,gBACAR,iBAAiBxD,SACjByD,iBACA5B;AAAA;ICMOoC,eAAe,SAAfA,aAAeC;EAC1B,kBAGE,CAAC1D,GAAG2D,IAAID,cACPA,UAAUE,aAAaF,UAAUE,UAAUC;EAE9C,OAAOC,WAAW;IAChB,kBAAoBC,OAAY;IAIhC,UACEC,eACAC,YACE;MACEC,YAAYC,UAAUC,UAAUC,UAAU7E;IAAA,GAE5C,CAAC6E;IAGL,wBAAsBC,iBAAiBC,YAAYC;MAAA;MAAnDC;MAAAC;IAEA,kBAAoBC;IAEpB,eAAiB,SAAjBC,WAAiB;MACf,eAAiBV,YAAYC;MAC7B,IAAIH,eAAe,CAACa;QAGlB;MAAA;MAGF,gBAAkBA,WACdL,KAAKM,oBAAoBD,UAAUJ,MAAMtD,SAAS,SAClD;MAGJ,IAAI4D,cAAc;QAChBC;MAAA;IAAA;IAIJ,eAAiB,IAAIC,cAAcL,UAAUF;IAE7C,kBAAoBX;IACpBmB,gBAAgB;MACd,mBAAqBC,YAAYhB;MACjCgB,YAAYhB,UAAUiB;MAGtBlD,KAAKwC,MAAM;QAAA,OAAOW,iBAAiBC,KAAKF;MAAA;MAGxC,IAAIG;QACFrD,KAAKqD,aAAab,MAAM;UAAA,OAAOc,oBAAoBF,KAAKC;QAAA;QACxDE,IAAIC,OAAOH,aAAaI;MAAA;IAAA;IAI5BC,UAAUhB,UAAU;IAEpBiB,QAAQ;MAAA,OAAM;QACZ,gBAAiBV,YAAYhB;QAC7BjC,KAAK4D,UAASpB,MAAM;UAAA,OAAOc,oBAAoBF,KAAKQ;QAAA;MAAA;IAAA;IAGtD,gBAAkBtB,KAAKuB,kBAAkBtB,MAAMtD;IAC/C,oCAAQuC,2CAAcsC;MAAWC;IAAA;EAAA;AAAA;AAAA,IA1FrChB;EA+FE;IAAA;IAAqB;IAA6B;EAAA;EAAA;IAAA;IAAA,OAClD;MACE,IAAIiB,MAAMC,QAAQ;QAChBV,IAAIW,MAAM,KAAKT;MAAA;IAAA;EAAA;EAAA;AAAA;AAOrB;EACE,mBAAqB,IAAIvD;EACzBd,YAAYC,eAAeA;EAG3B,IAAIkD,MAAM4B,OACR5B,wCACKA;IACH4B,OAAO7B,KAAK8B,oBAAoB7B,MAAM4B;EAAA;EAI1C5B,QAAQ,IAAI1B,eAAe0B;EAE3BnD,YAAYC,eAAe;EAC3B,OAAO,CAACkD,OAAOlD;AAAA;AAGjB;EACE,IAAI0E;IACF,IAAIjG,GAAG2D,IAAIsC,MAAMA,IAAIzG,YACfyG,IAAY9B,UAAU3E;EAAA;EAE9B,OAAOA;AAAA;AC1GT,IAAM+G,WAAWjH,OAAOC,IAAI;iBAEF,gCAMC;EAAA;IAAA,6BAHvBuF;IAAAA,yDAAsB;MAAA,OAAM;IAAA;IAAA,6BAC5BwB;IAAAA,yDAAsB;MAAA,OAAS,IAAIvD,eAAesD;IAAA;IAAA,6BAClDN;IAAAA,uDAAoB;MAAA,OAAStB;IAAA;EAG/B,iBAA+B;IAC7BK;IACAwB;IACAP;EAAA;EAGF,eAA+B,SAA/BjE,SAA+B4B;IAC7B,kBAAoB8C,eAAe9C,cAAc;IAEjD,IAAI1D,GAAGiB,IAAIyC;MACTA,YACE5B,SAAS4B,wBACCA,aAAa+C,aAAa/C,WAAWgD;IAAA;MAEjDhD,YACEA,UAAU6C,wBACCA,YAAYE,aAAa/C,WAAWgD;IAAA;IAGnDhD,UAAUiD,iCAA0BA;IACpC,OAAOjD;EAAA;EAGThC,SAASkF,YAAY;IACnB,IAAI5G,GAAGuD,IAAIqD;MACT/E,MAAM2E,eAAe9C;IAAA;IAEvB5B,SAASD,OAAOC,SAAS4B;EAAA;EAG3B,OAAO;IACL5B;EAAA;AAAA;AAIJ,qBAAuB,SAAvB0E,eAAuBK;EAAA,OACrB7G,GAAGiB,IAAI4F,OACHA,MACAA,OAAO7G,GAAGiB,IAAI4F,IAAIF,eAClBE,IAAIF,cACH3G,GAAG2D,IAAIkD,QAAQA,IAAIC,QAAS;AAAA","names":["$node","Symbol","for","value","owner","defineHidden","node","getPayload","setAnimated","payload","_value","is","num","lastPosition","step","Math","round","done","elapsedTime","durationProgress","lastVelocity","v0","AnimatedValue","Animated2","_toString","createInterpolator","output","_string","str","goal","getValue","AnimatedString","AnimatedValue2","TreeContext","dependencies","source","setValue","eachProp","isAnimated","values","key","animated","hasFluidValue","getFluidValue","_makePayload","each","reset","Set","_addToPayload","Array","from","add","map","length","some","i","makeAnimated","AnimatedArray","AnimatedObject2","isAnimatedString","AnimatedString2","nodeType","create","getAnimated","parentNode","constructor","arr","AnimatedArray2","withAnimated","Component","fun","prototype","isReactComponent","forwardRef","useRef","hasInstance","useCallback","instanceRef","current","updateRef","givenRef","getAnimatedState","givenProps","host","props","deps","useForceUpdate","callback","instance","applyAnimatedValues","didUpdate","forceUpdate","PropsObserver","useLayoutEffect","observerRef","observer","addFluidObserver","dep","lastObserver","removeFluidObserver","raf","cancel","update","useEffect","useOnce","observer2","getComponentProps","usedProps","ref","event","type","write","style","createAnimatedStyle","cacheKey","getDisplayName","withAnimated2","hostConfig","displayName","components","arg","name"],"sources":["src/Animated.ts","src/AnimatedValue.ts","src/AnimatedString.ts","src/context.ts","src/AnimatedObject.ts","src/AnimatedArray.ts","src/getAnimatedType.ts","src/withAnimated.tsx","src/createHost.ts"],"sourcesContent":[null,null,null,null,null,null,null,null,null]},"metadata":{},"sourceType":"module"}